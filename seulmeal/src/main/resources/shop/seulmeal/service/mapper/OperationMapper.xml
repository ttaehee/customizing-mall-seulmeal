<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="shop.seulmeal.service.mapper.OperationMapper">
	<resultMap type="post"	id="postSelectMap">
		<id property="postNo" column="post_no" jdbcType="NUMERIC" />
		<result property="title" column="title" jdbcType="VARCHAR" />
		<result property="content" column="content" jdbcType="VARCHAR" />
		<result property="shortContent" column="short_content" jdbcType="VARCHAR" />
		<result property="views" column="views" jdbcType="NUMERIC" />
		<result property="commentCount" column="comment_count" jdbcType="NUMERIC" />
		<result property="likeCount" column="like_count" jdbcType="NUMERIC" />
		<result property="thumnail" column="thumnail" jdbcType="VARCHAR" />
		<result property="regDate" column="reg_date" jdbcType="DATE" />
		<result property="updateDate" column="update_date" jdbcType="DATE" />
		<result property="endDate" column="end_date" jdbcType="DATE" />
		<result property="postStatus" column="post_status" jdbcType="VARCHAR" />
		<result property="publicStatus" column="public_status" jdbcType="VARCHAR" />
		<result property="password" column="password" jdbcType="NUMERIC" />
		<result property="answerStatus" column="answer_status" jdbcType="VARCHAR" />
		<result property="status" column="status" jdbcType="VARCHAR" />
		<association property="user" javaType="user">
			<result property="userId" column="user_id" jdbcType="VARCHAR" />
		</association>
		<association property="bpost" javaType="post">
			<result property="postNo" column="b_post_no" jdbcType="NUMERIC"/>
			<result property="title" column="b_title" jdbcType="VARCHAR"/>
		</association>
		<association property="npost" javaType="post">
			<result property="postNo" column="n_post_no" jdbcType="NUMERIC"/>
			<result property="title" column="n_title" jdbcType="VARCHAR"/>
		</association>
		<collection property="comments" ofType="comment">
			<result property="commentNo" column="comment_no" jdbcType="NUMERIC" />
			<result property="content" column="content_c" jdbcType="VARCHAR" />
			<result property="layer" column="layer" jdbcType="CHAR" />
			<result property="regDate" column="reg_date_c" jdbcType="DATE" />
			<result property="updateDate" column="update_date" jdbcType="DATE" />
			<result property="likeCount" column="like_count" jdbcType="NUMERIC" />
			<result property="parentCommentNo" column="parent_comment_no" jdbcType="NUMERIC" />
			<result property="status" column="status" jdbcType="VARCHAR" />
			<association property="user" javaType="user">
				<result property="userId" column="user_id_c" jdbcType="VARCHAR" />
			</association>
		</collection>
	</resultMap>
	
	<resultMap type="comment"	id="commentSelectMap">		
		<result property="commentNo" column="comment_no" jdbcType="NUMERIC" />
		<result property="postNo" column="post_no" jdbcType="NUMERIC" />
		<result property="content" column="content" jdbcType="VARCHAR" />
		<result property="layer" column="layer" jdbcType="CHAR" />
		<result property="regDate" column="reg_date" jdbcType="DATE" />
		<result property="updateDate" column="update_date" jdbcType="DATE" />
		<result property="likeCount" column="like_count" jdbcType="NUMERIC" />
		<result property="parentCommentNo" column="parent_comment_no" jdbcType="NUMERIC" />
		<result property="status" column="status" jdbcType="VARCHAR" />
		<association property="user" javaType="user">
			<result property="userId" column="user_id" jdbcType="VARCHAR" />
		</association>
	</resultMap>
	
	<insert id="insertOperation">
		INSERT INTO post(post_no,user_id, title, content, short_content, thumnail, reg_date, update_date, end_date, post_status,public_status,password)
		values((seq_post_no.NEXTVAL),#{user.userId},#{title},#{content},#{shortContent:VARCHAR},#{thumnail:VARCHAR},SYSDATE,SYSDATE,#{endDate:DATE},#{postStatus},#{publicStatus:VARCHAR},#{password:VARCHAR})
		<selectKey keyProperty="postNo" resultType="int" order="AFTER">
			SELECT seq_post_no.CURRVAL FROM DUAL
		</selectKey>
	</insert>
	
	<select id="getOperation" resultMap="postSelectMap">
		<if test="postStatus == 1">
			SELECT *
				FROM(
					SELECT
						title, post_no, content, user_id, reg_date, views, post_status, status,
						LAG(post_no) OVER (ORDER BY post_no) b_post_no,
						LAG(title) OVER (ORDER BY post_no) b_title,
						LEAD(post_no) OVER (ORDER BY post_no) n_post_no,
						LEAD(title) OVER (ORDER BY post_no) n_title
					FROM post
					<where>
						post_status = '1'
					</where>
			ORDER BY post_no
			)
			<where>
				post_no = #{postNo}
			</where>
		</if>
		<if test="postStatus == 2">
			SELECT * FROM post
			<where>
				post_no = #{postNo}
			</where>
		</if>
		<if test="postStatus == 3">
			SELECT p.*,c.comment_no, c.content content_c, c.user_id user_id_c, c.reg_date reg_date_c FROM post p, comments c
			<where>
				p.post_no=c.post_no(+)
				AND post_status = 3 AND p.status=0 AND c.status=0
			</where>
				AND p.post_no = #{postNo}
		</if>
	</select>
	
	<update id="updateOperation">
		UPDATE post
		<set>
			title = #{title:VARCHAR},
			content = #{content:VARCHAR},
			short_content = #{shortContent:VARCHAR},
			thumnail = #{thumnail:VARCHAR},
			update_date = SYSDATE,
			end_date = #{endDate:DATE}
		</set>
		<where>
			post_no = #{postNo}
		</where>
	</update>
	
	<update id="deleteOperation">
		UPDATE post
		<set>
			status = 1
		</set>
		<where>
			post_no = #{postNo}
		</where>
	</update>
	
	<!-- view 조회수 증가 -->
	<update id="updateOperationView">
		UPDATE post
		<set>
			views = views +1
		</set>
		<where>
			post_no =#{postNo}
		</where>
	</update>
	
	<!-- 답변 완료 변경 -->
	<update id="updateAnswerStatus">
		UPDATE post
		<set>
			answer_status = 1
		</set>
		<where>
			post_no=#{postNo}
		</where>
	</update>
	
	<!-- list -->
	<select id="getListOperation" resultMap="postSelectMap" parameterType="map">
		<if test="postStatus != 2">
		SELECT *
		FROM	(SELECT inner_table.*, ROWNUM AS row_seq
				FROM	(SELECT * FROM post p
							<where>
								post_status = #{postStatus}
								AND status = '0' 
								<if test="search.searchCondition==0">
									<if test="postStatus == 3">
										AND answer_status = 0
									</if>									
								</if>
								<if test="search.searchCondition==1">
									<if test="postStatus == 3">
										AND answer_status = 1
									</if>
								</if>
								<if test="search.searchKeyword != null">
									AND (title LIKE '%'||#{search.searchKeyword}||'%' OR content LIKE '%'||#{search.searchKeyword}||'%')
								</if>
							</where>							
							ORDER BY reg_date desc)inner_table
				WHERE ROWNUM &lt;= #{search.endRowNum})
		WHERE row_seq BETWEEN #{search.startRowNum} AND #{search.endRowNum}
		</if>
		
		<if test="postStatus == 2">
			SELECT post_no, title, short_content, end_date, reg_date, views, thumnail
			FROM post
			<where>
				post_status = #{postStatus}				
				<if test="search.searchCondition==0">
					AND end_date &gt; SYSDATE AND status = '0'
				</if>
				<if test="search.searchCondition==1">
					AND end_date &lt; SYSDATE AND status = '1'
				</if>
				<if test="search.searchKeyword !=null">
					AND (title LIKE '%'||#{search.searchKeyword}||'%' OR content LIKE '%'||#{search.searchKeyword}||'%')
				</if>
			</where>
			ORDER BY reg_date desc
		</if>
	</select>
	
	<!-- ROW Count -->
	<select id="getTotalCount" resultType="int" parameterType="map">
		SELECT COUNT(*)
	  	FROM(	SELECT post_no FROM post
  							<where>
								post_status = #{postStatus}
								AND status = '0' 
								<if test="search.searchCondition==0">
									<if test="postStatus == 2">
										AND end_date &gt; SYSDATE
									</if>
									<if test="postStatus == 3">
										AND answer_status = 0
									</if>									
								</if>
								<if test="search.searchCondition==1">
									<if test="postStatus == 2">
										AND end_date &lt; SYSDATE
									</if>
									<if test="postStatus == 3">
										AND answer_status = 1
									</if>
								</if>
								<if test="search.searchKeyword != null">
									AND (title LIKE '%'||#{search.searchKeyword}||'%' OR content LIKE '%'||#{search.searchKeyword}||'%')
								</if>
							</where> ) countTable
	</select>
	
	<update id="endEvent">
		UPDATE post
		set
			status =1
		where end_date &lt; SYSDATE
	</update>
		
	<!-- 답변 -->
	<insert id="insertAnswer">
		INSERT INTO comments(comment_no,user_id,post_no,content,reg_date,update_date)
		values((seq_comment_no.NEXTVAL),#{user.userId},#{postNo},#{content},SYSDATE,SYSDATE)
		<selectKey keyProperty="commentNo" resultType="int" order="AFTER">
			SELECT seq_comment_no.CURRVAL FROM DUAL
		</selectKey>
	</insert>
	
	<select id="getListAnswer" resultMap="commentSelectMap">
		SELECT * FROM comments
		<where>
			post_no = #{postNo}
			AND status = '0'
		</where>
	</select>
	
	<update id="updateAnswer">
		UPDATE comments
		<set>
			content = #{content},
			update_date = SYSDATE
		</set>
		<where>
			comment_no = #{commentNo}
		</where>
	</update>
	
	<update id="deleteAnswer">
		UPDATE comments
		<set>
			status ='1'
		</set>
		<where>
			comment_no = #{commentNo}
		</where>
	</update>
	
	<!-- admin page -->
	<select id="userCount" resultType="map">
		SELECT COUNT(*) as count,
		TO_CHAR(TO_DATE(reg_date), 'YYYY-MM') as MONTHLYDATA
		FROM ${table}
		<where>
			reg_date &gt;= '22/01/01' AND reg_date &lt; '23/01/01'
		</where>
		GROUP BY TO_CHAR(TO_DATE(reg_date), 'YYYY-MM')
		ORDER BY MONTHLYDATA
	</select>
	
	<select id="salePrice" resultType="map">
		SELECT sum(price) as count,
		TO_CHAR(TO_DATE(reg_date), 'YYYY-MM') as MONTHLYDATA
		FROM purchase
		WHERE reg_date &gt;= '22/01/01' AND reg_date &lt; '23/01/01'
		GROUP BY TO_CHAR(TO_DATE(reg_date), 'YYYY-MM')
		ORDER BY MONTHLYDATA
	</select>
	
</mapper>