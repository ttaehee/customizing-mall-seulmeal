<?xml version="1.0" encoding="UTF-8"?> 

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
           "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<mapper namespace="shop.seulmeal.service.mapper.PurchaseMapper"> 
	
	<resultMap id="customPartsSelectMap" type="customParts">
		<result property="parts.partsNo" 		column="parts_no" 	jdbcType="NUMERIC"/> 
		<!--  
		<association property="parts" javaType="parts" >
			<result property="partsNo" 			column="parts_no" 		jdbcType="NUMERIC"/>
		</association>
		-->
	</resultMap>
	
	<resultMap id="customProductSelectMap" type="customProduct">
    	<result property="customProductNo" 		column="customproduct_no" 	jdbcType="NUMERIC"/>
	
		<association property="user" javaType="user" >
			<result property="userId" 	 		column="user_id" 			jdbcType="VARCHAR"/>
		</association>
		
		<association property="product" javaType="product" >
			<result property="productNo" 		column="product_no" 		jdbcType="NUMERIC"/>
		</association>
	</resultMap>


	<!-- custom_pars -->
	<insert id="insertCustomParts">
		INSERT INTO customparts
		(customparts_no, customproduct_no, productparts_no, parts_no, gram)
		SELECT seq_customparts_no.NEXTVAL, inner_table.*
		FROM(
			<foreach collection="list" item="item" index="index" separator="union all">
				SELECT #{item.customProductNo:NUMERIC} as customProduct_no,
				#{item.productPartsNo:NUMERIC} as productParts_no,
				#{item.parts.partsNo:NUMERIC} as parts_no,
				#{item.gram:NUMERIC} as gram
				FROM dual
			</foreach>)inner_table
		<selectKey keyProperty="customPartsNo" resultType="int" order="AFTER">
			SELECT seq_customparts_no.CURRVAL FROM DUAL
		</selectKey>
	</insert>
	
	<select id="getCustomParts" resultType="customParts">
		SELECT * FROM customparts
		<where>
			customparts_no = #{customPartsNo}
		</where>
	</select>
	
	<select id="getListCustomParts" resultType="customParts" parameterType="map">
		SELECT *
		FROM (SELECT inner_table.*, ROWNUM AS row_seq
			FROM (SELECT cparts.customparts_no, cparts.gram gram, vt.productparts_no, vt.name name, parts.price price, parts.calorie calorie
			    FROM customparts cparts, parts, 
			    (SELECT pparts.productparts_no productparts_no, parts.name name
			    FROM productparts pparts, parts
			    WHERE pparts.parts_no=parts.parts_no) vt
				WHERE cparts.parts_no=parts.parts_no AND cparts.productparts_no=vt.productparts_no
				AND cparts.customproduct_no=#{customProductNo}
				ORDER BY cparts.customparts_no) inner_table
			WHERE ROWNUM &lt; = #{search.endRowNum})
		WHERE row_seq BETWEEN #{search.startRowNum} AND #{search.endRowNum}
	</select>
	
	<delete id="deleteCustomParts" parameterType="int">
        DELETE FROM customparts WHERE customproduct_no = #{customProductNo}
    </delete>


	<!-- custom_product -->
	<insert id="insertCustomProduct">
		INSERT INTO customproduct
		(customproduct_no, user_id, product_no, count, 
		cart_status, status, reg_date)
		values((seq_customproduct_no.NEXTVAL),#{user.userId}, #{product.productNo}, 
		#{count:NUMERIC}, #{cartStatus:CHAR}, 
		#{status:CHAR}, SYSDATE)
		<selectKey keyProperty="customProductNo" resultType="int" order="AFTER">
			SELECT seq_customproduct_no.CURRVAL FROM DUAL
		</selectKey>
	</insert>
	
	<select id="getCustomProduct" resultType="customProduct">
		SELECT *
		FROM customproduct
		<where>
			customproduct_no = #{customProductNo}
		</where>
	</select>
	
	<select id="getListCustomProduct" resultType="customProduct" parameterType="map">
		SELECT *
		FROM (SELECT inner_table.*, ROWNUM AS row_seq
			FROM (SELECT cprod.*,cparts.*
			    FROM customproduct cprod, customparts cparts
				WHERE cprod.customproduct_no=cparts.customproduct_no AND user_id=#{user.userId} AND cart_status='1'
				ORDER BY cprod.customproduct_no) inner_table
			WHERE ROWNUM &lt; = #{search.endRowNum})
		WHERE row_seq BETWEEN #{search.startRowNum} AND #{search.endRowNum}
	</select>
	
	<update id="updateCustomProduct">
		UPDATE customproduct
		<set>
			purchase_no=#{purchase.purchaseNo:NUMERIC} AND cart_status = '0'
		</set>
		<where>
			customproduct_no = #{customProductNo}
		</where>
	</update>
	
	<update id="deleteCustomProduct">
		UPDATE customproduct
		<set>
			cart_status = '1'
		</set>
		<where>
			customproduct_no = #{customProductNo}
		</where>
	</update>
	

	<!-- purchase -->
	<insert id="insertPurchase">
		INSERT INTO purchase
		(purchase_no, user_id, price, delivery_price, address, name, phone, 
		message, purchase_status, reason, image, status, reg_date, 
		payment_condition, imp_uid, amount)
		values((seq_purchase_no.NEXTVAL),#{user.userId},#{price:NUMERIC}, 
		#{deliveryPrice:NUMERIC}, #{address:VARCHAR}, #{name:VARCHAR}, 
		#{phone:VARCHAR}, #{message:VARCHAR}, #{purchaseStatus:CHAR}, 
		#{reason:VARCHAR}, #{image:VARCHAR}, #{status:CHAR}, 
		SYSDATE, #{paymentCondition:CHAR},#{imp_uid:VARCHAR}, 
		#{amount:NUMERIC})
		<selectKey keyProperty="purchaseNo" resultType="int" order="AFTER">
			SELECT seq_purchase_no.CURRVAL FROM DUAL
		</selectKey>
	</insert>
	
	<select id="getPurchase" resultType="purchase">
		SELECT * FROM purchase
		<where>
			purchase_no = #{purchaseNo}
		</where>
	</select>
	
	<select id="getListPurchase" resultType="purchase" parameterType="map">
		SELECT *
		FROM (SELECT inner_table.*, ROWNUM AS row_seq
			FROM (SELECT * FROM purchase
				WHERE user_id=#{userId} AND status='0'
				<if test="searchCondition != null">
					<if test="searchCondition == 0">
						AND reg_date=SYSDATE
					</if>
					<if test="searchCondition == 1">
						<![CDATA[
						AND reg_date>=SYSDATE-7
						]]>
					</if>
					<if test="searchCondition == 2">
						AND reg_date &gt;= DATE_ADD(SYSDATE, INTERVAL -1 MONTH )
					</if>
					<if test="searchCondition == 3">
						AND reg_date &gt;= add_month(SYSDATE,-3)
					</if>
				</if>
				ORDER BY purchase_no) inner_table
			WHERE ROWNUM &lt; = #{search.endRowNum})
		WHERE row_seq BETWEEN #{search.startRowNum} AND #{search.endRowNum}
	</select>
	
	<update id="updatePurchaseCode">
		UPDATE purchase
		<set>
			purchase_status=#{purchaseStatus:CHAR}
		</set>
		<where>
			purchase_no = #{purchaseNo}
		</where>
	</update>
	
	<update id="deletePurchase">
		UPDATE purchase
		<set>
			status = '1'
		</set>
		<where>
			purchase_no = #{purchaseNo}
		</where>
	</update>

	
	<!-- ROW Count -->
	<select id="getTotalCount" resultType="int" parameterType="map">
		SELECT COUNT(*)
	  	FROM( SELECT * FROM purchase
	  	<where>
			purchase_status = #{purchaseStatus} AND status = '0') countTable
		</where>
	</select>


</mapper>